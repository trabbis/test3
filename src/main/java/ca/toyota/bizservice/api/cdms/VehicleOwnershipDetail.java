/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import ca.toyota.bizservice.api.cdms.Customer;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;

/**
 * VehicleOwnershipDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class VehicleOwnershipDetail {
  @JsonProperty("customer")
  private Customer customer = null;

  /**
   * Customer type
   */
  public enum OwnershipTypeCodeEnum {
    OWNER("OWNER"),
    
    LESSOR("LESSOR"),
    
    ALT_OWNER("ALT_OWNER"),
    
    LESSEE("LESSEE"),
    
    ALT_LESSEE("ALT_LESSEE");

    private String value;

    OwnershipTypeCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OwnershipTypeCodeEnum fromValue(String text) {
      for (OwnershipTypeCodeEnum b : OwnershipTypeCodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("ownershipTypeCode")
  private OwnershipTypeCodeEnum ownershipTypeCode = null;

  /**
   * Indicates the customer&#39;s relationship to a vehicle
   */
  public enum RelationshipTypeCodeEnum {
    CO_OWNER("CO_OWNER"),
    
    DEMO("DEMO"),
    
    DLR_LSEE("DLR_LSEE"),
    
    DLR_LSEE_DRV("DLR_LSEE_DRV"),
    
    DLR_LSOR("DLR_LSOR"),
    
    DRIVER("DRIVER"),
    
    FLT_LSEE("FLT_LSEE"),
    
    FLT_LSEE_DRV("FLT_LSEE_DRV"),
    
    FLT_LSOR("FLT_LSOR"),
    
    FLT_OWNER("FLT_OWNER"),
    
    LSEE("LSEE"),
    
    LSEE_DRV("LSEE_DRV"),
    
    LSOR("LSOR"),
    
    PRE_REG("PRE_REG"),
    
    REG_OWNER("REG_OWNER"),
    
    RENTL_OWNER("RENTL_OWNER"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    RelationshipTypeCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RelationshipTypeCodeEnum fromValue(String text) {
      for (RelationshipTypeCodeEnum b : RelationshipTypeCodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("relationshipTypeCode")
  private RelationshipTypeCodeEnum relationshipTypeCode = null;

  @JsonProperty("originalOwnershipStartDate")
  private LocalDate originalOwnershipStartDate = null;

  @JsonProperty("ownershipStartDate")
  @JsonFormat(pattern= "yyyy-MM-dd")
  private LocalDate ownershipStartDate = null;

  @JsonProperty("ownershipEndDate")
  @JsonFormat(pattern= "yyyy-MM-dd")
  private LocalDate ownershipEndDate = null;

  /**
   * Vehicle relationship end reason code. The value is one of A - Sold at Auction, I - Incorrect Customer, O - Offshore VIN, S - Stolen, T - Terminated Relationship, W - Write Off
   */
  public enum OwnershipEndReasonEnum {
    A("A"),
    
    I("I"),
    
    O("O"),
    
    S("S"),
    
    T("T"),
    
    W("W");

    private String value;

    OwnershipEndReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OwnershipEndReasonEnum fromValue(String text) {
      for (OwnershipEndReasonEnum b : OwnershipEndReasonEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("ownershipEndReason")
  private OwnershipEndReasonEnum ownershipEndReason = null;

  public VehicleOwnershipDetail customer(Customer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(required = true, value = "")
  public Customer getCustomer() {
    return customer;
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
  }

  public VehicleOwnershipDetail ownershipTypeCode(OwnershipTypeCodeEnum ownershipTypeCode) {
    this.ownershipTypeCode = ownershipTypeCode;
    return this;
  }

   /**
   * Customer type
   * @return ownershipTypeCode
  **/
  @ApiModelProperty(required = true, value = "Customer type")
  public OwnershipTypeCodeEnum getOwnershipTypeCode() {
    return ownershipTypeCode;
  }

  public void setOwnershipTypeCode(OwnershipTypeCodeEnum ownershipTypeCode) {
    this.ownershipTypeCode = ownershipTypeCode;
  }

  public VehicleOwnershipDetail relationshipTypeCode(RelationshipTypeCodeEnum relationshipTypeCode) {
    this.relationshipTypeCode = relationshipTypeCode;
    return this;
  }

   /**
   * Indicates the customer&#39;s relationship to a vehicle
   * @return relationshipTypeCode
  **/
  @ApiModelProperty(value = "Indicates the customer's relationship to a vehicle")
  public RelationshipTypeCodeEnum getRelationshipTypeCode() {
    return relationshipTypeCode;
  }

  public void setRelationshipTypeCode(RelationshipTypeCodeEnum relationshipTypeCode) {
    this.relationshipTypeCode = relationshipTypeCode;
  }

  public VehicleOwnershipDetail originalOwnershipStartDate(LocalDate originalOwnershipStartDate) {
    this.originalOwnershipStartDate = originalOwnershipStartDate;
    return this;
  }

   /**
   * Original start date when the specified VIN was associated with the Customer profile
   * @return originalOwnershipStartDate
  **/
  @ApiModelProperty(value = "Original start date when the specified VIN was associated with the Customer profile")
  public LocalDate getOriginalOwnershipStartDate() {
    return originalOwnershipStartDate;
  }

  public void setOriginalOwnershipStartDate(LocalDate originalOwnershipStartDate) {
    this.originalOwnershipStartDate = originalOwnershipStartDate;
  }

  public VehicleOwnershipDetail ownershipStartDate(LocalDate ownershipStartDate) {
    this.ownershipStartDate = ownershipStartDate;
    return this;
  }

   /**
   * Start date when the specified VIN was associated with the Customer profile
   * @return ownershipStartDate
  **/
  @ApiModelProperty(required = true, value = "Start date when the specified VIN was associated with the Customer profile")
  public LocalDate getOwnershipStartDate() {
    return ownershipStartDate;
  }

  public void setOwnershipStartDate(LocalDate ownershipStartDate) {
    this.ownershipStartDate = ownershipStartDate;
  }

  public VehicleOwnershipDetail ownershipEndDate(LocalDate ownershipEndDate) {
    this.ownershipEndDate = ownershipEndDate;
    return this;
  }

   /**
   * Start date when the specified VIN was disassociated with the Customer profile
   * @return ownershipEndDate
  **/
  @ApiModelProperty(value = "Start date when the specified VIN was disassociated with the Customer profile")
  public LocalDate getOwnershipEndDate() {
    return ownershipEndDate;
  }

  public void setOwnershipEndDate(LocalDate ownershipEndDate) {
    this.ownershipEndDate = ownershipEndDate;
  }

  public VehicleOwnershipDetail ownershipEndReason(OwnershipEndReasonEnum ownershipEndReason) {
    this.ownershipEndReason = ownershipEndReason;
    return this;
  }

   /**
   * Vehicle relationship end reason code. The value is one of A - Sold at Auction, I - Incorrect Customer, O - Offshore VIN, S - Stolen, T - Terminated Relationship, W - Write Off
   * @return ownershipEndReason
  **/
  @ApiModelProperty(value = "Vehicle relationship end reason code. The value is one of A - Sold at Auction, I - Incorrect Customer, O - Offshore VIN, S - Stolen, T - Terminated Relationship, W - Write Off")
  public OwnershipEndReasonEnum getOwnershipEndReason() {
    return ownershipEndReason;
  }

  public void setOwnershipEndReason(OwnershipEndReasonEnum ownershipEndReason) {
    this.ownershipEndReason = ownershipEndReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleOwnershipDetail vehicleOwnershipDetail = (VehicleOwnershipDetail) o;
    return Objects.equals(this.customer, vehicleOwnershipDetail.customer) &&
        Objects.equals(this.ownershipTypeCode, vehicleOwnershipDetail.ownershipTypeCode) &&
        Objects.equals(this.relationshipTypeCode, vehicleOwnershipDetail.relationshipTypeCode) &&
        Objects.equals(this.originalOwnershipStartDate, vehicleOwnershipDetail.originalOwnershipStartDate) &&
        Objects.equals(this.ownershipStartDate, vehicleOwnershipDetail.ownershipStartDate) &&
        Objects.equals(this.ownershipEndDate, vehicleOwnershipDetail.ownershipEndDate) &&
        Objects.equals(this.ownershipEndReason, vehicleOwnershipDetail.ownershipEndReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customer, ownershipTypeCode, relationshipTypeCode, originalOwnershipStartDate, ownershipStartDate, ownershipEndDate, ownershipEndReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleOwnershipDetail {\n");
    
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    ownershipTypeCode: ").append(toIndentedString(ownershipTypeCode)).append("\n");
    sb.append("    relationshipTypeCode: ").append(toIndentedString(relationshipTypeCode)).append("\n");
    sb.append("    originalOwnershipStartDate: ").append(toIndentedString(originalOwnershipStartDate)).append("\n");
    sb.append("    ownershipStartDate: ").append(toIndentedString(ownershipStartDate)).append("\n");
    sb.append("    ownershipEndDate: ").append(toIndentedString(ownershipEndDate)).append("\n");
    sb.append("    ownershipEndReason: ").append(toIndentedString(ownershipEndReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

