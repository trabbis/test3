/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;

/**
 * SuspendMail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class SuspendMail {
  @JsonProperty("suspendMailReason")
  private String suspendMailReason = null;

  @JsonProperty("suspendMailSource")
  private String suspendMailSource = null;

  @JsonProperty("suspendMailDate")
  private LocalDate suspendMailDate = null;

  public SuspendMail suspendMailReason(String suspendMailReason) {
    this.suspendMailReason = suspendMailReason;
    return this;
  }

   /**
   * suspend mail reason (derived, only for read)
   * @return suspendMailReason
  **/
  @ApiModelProperty(value = "suspend mail reason (derived, only for read)")
  public String getSuspendMailReason() {
    return suspendMailReason;
  }

  public void setSuspendMailReason(String suspendMailReason) {
    this.suspendMailReason = suspendMailReason;
  }

  public SuspendMail suspendMailSource(String suspendMailSource) {
    this.suspendMailSource = suspendMailSource;
    return this;
  }

   /**
   * suspend mail source (derived, only for read)
   * @return suspendMailSource
  **/
  @ApiModelProperty(value = "suspend mail source (derived, only for read)")
  public String getSuspendMailSource() {
    return suspendMailSource;
  }

  public void setSuspendMailSource(String suspendMailSource) {
    this.suspendMailSource = suspendMailSource;
  }

  public SuspendMail suspendMailDate(LocalDate suspendMailDate) {
    this.suspendMailDate = suspendMailDate;
    return this;
  }

   /**
   * suspend mail date (derived, only for read)
   * @return suspendMailDate
  **/
  @ApiModelProperty(value = "suspend mail date (derived, only for read)")
  public LocalDate getSuspendMailDate() {
    return suspendMailDate;
  }

  public void setSuspendMailDate(LocalDate suspendMailDate) {
    this.suspendMailDate = suspendMailDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuspendMail suspendMail = (SuspendMail) o;
    return Objects.equals(this.suspendMailReason, suspendMail.suspendMailReason) &&
        Objects.equals(this.suspendMailSource, suspendMail.suspendMailSource) &&
        Objects.equals(this.suspendMailDate, suspendMail.suspendMailDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suspendMailReason, suspendMailSource, suspendMailDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuspendMail {\n");
    
    sb.append("    suspendMailReason: ").append(toIndentedString(suspendMailReason)).append("\n");
    sb.append("    suspendMailSource: ").append(toIndentedString(suspendMailSource)).append("\n");
    sb.append("    suspendMailDate: ").append(toIndentedString(suspendMailDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

