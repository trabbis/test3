/*
 * CDMS Customer API
 * CDMS Customer API will provide a set of the REST API for operations on Customer Data Management System (CDMS)
 *
 * OpenAPI spec version: 1.0
 * Contact: johnson_ouyang@toyota.ca
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import ca.toyota.bizservice.api.cdms.Customer;
import ca.toyota.bizservice.api.cdms.RequestHeader;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;

/**
 * SuspendCustomerRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:36.821-05:00")
public class SuspendCustomerRequest {
  @JsonProperty("requestHeader")
  private RequestHeader requestHeader = null;

  @JsonProperty("customer")
  private Customer customer = null;

  /**
   * Type of suspend processing. The optional values are E - ECP Unavailable, U - Address Unavailable, C - Opt Out, D - Deceased, OptIn -  Opt In, Email - Email Address
   */
  public enum SuspendProcessingTypeEnum {
    E("E"),
    
    U("U"),
    
    C("C"),
    
    D("D"),
    
    OPTIN("OptIn"),
    
    EMAIL("Email");

    private String value;

    SuspendProcessingTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SuspendProcessingTypeEnum fromValue(String text) {
      for (SuspendProcessingTypeEnum b : SuspendProcessingTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("suspendProcessingType")
  private SuspendProcessingTypeEnum suspendProcessingType = null;

  @JsonProperty("suspendDate")
  private LocalDate suspendDate = null;

  @JsonProperty("suspendReasonCode")
  private String suspendReasonCode = null;

  public SuspendCustomerRequest requestHeader(RequestHeader requestHeader) {
    this.requestHeader = requestHeader;
    return this;
  }

   /**
   * Get requestHeader
   * @return requestHeader
  **/
  @ApiModelProperty(required = true, value = "")
  public RequestHeader getRequestHeader() {
    return requestHeader;
  }

  public void setRequestHeader(RequestHeader requestHeader) {
    this.requestHeader = requestHeader;
  }

  public SuspendCustomerRequest customer(Customer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(required = true, value = "")
  public Customer getCustomer() {
    return customer;
  }

  public void setCustomer(Customer customer) {
    this.customer = customer;
  }

  public SuspendCustomerRequest suspendProcessingType(SuspendProcessingTypeEnum suspendProcessingType) {
    this.suspendProcessingType = suspendProcessingType;
    return this;
  }

   /**
   * Type of suspend processing. The optional values are E - ECP Unavailable, U - Address Unavailable, C - Opt Out, D - Deceased, OptIn -  Opt In, Email - Email Address
   * @return suspendProcessingType
  **/
  @ApiModelProperty(required = true, value = "Type of suspend processing. The optional values are E - ECP Unavailable, U - Address Unavailable, C - Opt Out, D - Deceased, OptIn -  Opt In, Email - Email Address")
  public SuspendProcessingTypeEnum getSuspendProcessingType() {
    return suspendProcessingType;
  }

  public void setSuspendProcessingType(SuspendProcessingTypeEnum suspendProcessingType) {
    this.suspendProcessingType = suspendProcessingType;
  }

  public SuspendCustomerRequest suspendDate(LocalDate suspendDate) {
    this.suspendDate = suspendDate;
    return this;
  }

   /**
   * Get suspendDate
   * @return suspendDate
  **/
  @ApiModelProperty(required = true, value = "")
  public LocalDate getSuspendDate() {
    return suspendDate;
  }

  public void setSuspendDate(LocalDate suspendDate) {
    this.suspendDate = suspendDate;
  }

  public SuspendCustomerRequest suspendReasonCode(String suspendReasonCode) {
    this.suspendReasonCode = suspendReasonCode;
    return this;
  }

   /**
   * Reason code for suspend processing
   * @return suspendReasonCode
  **/
  @ApiModelProperty(value = "Reason code for suspend processing")
  public String getSuspendReasonCode() {
    return suspendReasonCode;
  }

  public void setSuspendReasonCode(String suspendReasonCode) {
    this.suspendReasonCode = suspendReasonCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuspendCustomerRequest suspendCustomerRequest = (SuspendCustomerRequest) o;
    return Objects.equals(this.requestHeader, suspendCustomerRequest.requestHeader) &&
        Objects.equals(this.customer, suspendCustomerRequest.customer) &&
        Objects.equals(this.suspendProcessingType, suspendCustomerRequest.suspendProcessingType) &&
        Objects.equals(this.suspendDate, suspendCustomerRequest.suspendDate) &&
        Objects.equals(this.suspendReasonCode, suspendCustomerRequest.suspendReasonCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestHeader, customer, suspendProcessingType, suspendDate, suspendReasonCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuspendCustomerRequest {\n");
    
    sb.append("    requestHeader: ").append(toIndentedString(requestHeader)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    suspendProcessingType: ").append(toIndentedString(suspendProcessingType)).append("\n");
    sb.append("    suspendDate: ").append(toIndentedString(suspendDate)).append("\n");
    sb.append("    suspendReasonCode: ").append(toIndentedString(suspendReasonCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

