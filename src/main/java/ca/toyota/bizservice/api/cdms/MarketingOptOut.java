/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;

/**
 * MarketingOptOut
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class MarketingOptOut {
  @JsonProperty("optOutIndicator")
  private Boolean optOutIndicator = null;

  @JsonProperty("optOutSource")
  private String optOutSource = null;

  @JsonProperty("optOutDate")
  @JsonFormat(pattern= "yyyy-MM-dd")
  private LocalDate optOutDate = null;

  public MarketingOptOut optOutIndicator(Boolean optOutIndicator) {
    this.optOutIndicator = optOutIndicator;
    return this;
  }

   /**
   * Indicator to note that the communication to the Party is opt out
   * @return optOutIndicator
  **/
  @ApiModelProperty(required = true, value = "Indicator to note that the communication to the Party is opt out")
  public Boolean isOptOutIndicator() {
    return optOutIndicator;
  }

  public void setOptOutIndicator(Boolean optOutIndicator) {
    this.optOutIndicator = optOutIndicator;
  }

  public MarketingOptOut optOutSource(String optOutSource) {
    this.optOutSource = optOutSource;
    return this;
  }

   /**
   * The source identifying a party asking the communication to opt out
   * @return optOutSource
  **/
  @ApiModelProperty(required = true, value = "The source identifying a party asking the communication to opt out")
  public String getOptOutSource() {
    return optOutSource;
  }

  public void setOptOutSource(String optOutSource) {
    this.optOutSource = optOutSource;
  }

  public MarketingOptOut optOutDate(LocalDate optOutDate) {
    this.optOutDate = optOutDate;
    return this;
  }

   /**
   * Effective date for the communication to Party to be opted out
   * @return optOutDate
  **/
  @ApiModelProperty(required = true, value = "Effective date for the communication to Party to be opted out")
  public LocalDate getOptOutDate() {
    return optOutDate;
  }

  public void setOptOutDate(LocalDate optOutDate) {
    this.optOutDate = optOutDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketingOptOut marketingOptOut = (MarketingOptOut) o;
    return Objects.equals(this.optOutIndicator, marketingOptOut.optOutIndicator) &&
        Objects.equals(this.optOutSource, marketingOptOut.optOutSource) &&
        Objects.equals(this.optOutDate, marketingOptOut.optOutDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optOutIndicator, optOutSource, optOutDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketingOptOut {\n");
    
    sb.append("    optOutIndicator: ").append(toIndentedString(optOutIndicator)).append("\n");
    sb.append("    optOutSource: ").append(toIndentedString(optOutSource)).append("\n");
    sb.append("    optOutDate: ").append(toIndentedString(optOutDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

