/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import ca.toyota.bizservice.api.cdms.Customer;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * CustomerRelationship
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class CustomerRelationship {
  @JsonProperty("relatedCustomer")
  private Customer relatedCustomer = null;

  /**
   * Indicates the Business Party&#39;s relationship to the primary customer
   */
  public enum RelationshipTypeCodeEnum {
    PRFRD_DLR("PRFRD_DLR"),
    
    NEAREST_DLR("NEAREST_DLR");

    private String value;

    RelationshipTypeCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RelationshipTypeCodeEnum fromValue(String text) {
      for (RelationshipTypeCodeEnum b : RelationshipTypeCodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("relationshipTypeCode")
  private RelationshipTypeCodeEnum relationshipTypeCode = null;

  public CustomerRelationship relatedCustomer(Customer relatedCustomer) {
    this.relatedCustomer = relatedCustomer;
    return this;
  }

   /**
   * Get relatedCustomer
   * @return relatedCustomer
  **/
  @ApiModelProperty(value = "")
  public Customer getRelatedCustomer() {
    return relatedCustomer;
  }

  public void setRelatedCustomer(Customer relatedCustomer) {
    this.relatedCustomer = relatedCustomer;
  }

  public CustomerRelationship relationshipTypeCode(RelationshipTypeCodeEnum relationshipTypeCode) {
    this.relationshipTypeCode = relationshipTypeCode;
    return this;
  }

   /**
   * Indicates the Business Party&#39;s relationship to the primary customer
   * @return relationshipTypeCode
  **/
  @ApiModelProperty(value = "Indicates the Business Party's relationship to the primary customer")
  public RelationshipTypeCodeEnum getRelationshipTypeCode() {
    return relationshipTypeCode;
  }

  public void setRelationshipTypeCode(RelationshipTypeCodeEnum relationshipTypeCode) {
    this.relationshipTypeCode = relationshipTypeCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerRelationship customerRelationship = (CustomerRelationship) o;
    return Objects.equals(this.relatedCustomer, customerRelationship.relatedCustomer) &&
        Objects.equals(this.relationshipTypeCode, customerRelationship.relationshipTypeCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relatedCustomer, relationshipTypeCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerRelationship {\n");
    
    sb.append("    relatedCustomer: ").append(toIndentedString(relatedCustomer)).append("\n");
    sb.append("    relationshipTypeCode: ").append(toIndentedString(relationshipTypeCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

