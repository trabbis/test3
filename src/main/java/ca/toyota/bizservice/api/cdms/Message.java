/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

/**
 * Response details
 */
@ApiModel(description = "Response details")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class Message {
  @JsonProperty("applicationId")
  private String applicationId = null;

  @JsonProperty("transactionId")
  private String transactionId = null;

  @JsonProperty("messageDateTime")
  private OffsetDateTime messageDateTime = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("service")
  private String service = null;

  @JsonProperty("operation")
  private String operation = null;

  /**
   * Error, Warning, Info
   */
  public enum ErrorSeverityEnum {
    ERROR("Error"),
    
    WARNING("Warning"),
    
    INFO("Info");

    private String value;

    ErrorSeverityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ErrorSeverityEnum fromValue(String text) {
      for (ErrorSeverityEnum b : ErrorSeverityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("errorSeverity")
  private ErrorSeverityEnum errorSeverity = null;

  /**
   * SYSTEM, BUSINESS
   */
  public enum ErrorTypeEnum {
    SYSTEM("SYSTEM"),
    
    BUSINESS("BUSINESS");

    private String value;

    ErrorTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ErrorTypeEnum fromValue(String text) {
      for (ErrorTypeEnum b : ErrorTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("errorType")
  private ErrorTypeEnum errorType = null;

  @JsonProperty("errorCode")
  private String errorCode = null;

  @JsonProperty("errorText")
  private String errorText = null;

  public Message applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * System name who process the request
   * @return applicationId
  **/
  @ApiModelProperty(value = "System name who process the request")
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }

  public Message transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Unique transaction ID from the request
   * @return transactionId
  **/
  @ApiModelProperty(required = true, value = "Unique transaction ID from the request")
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public Message messageDateTime(OffsetDateTime messageDateTime) {
    this.messageDateTime = messageDateTime;
    return this;
  }

   /**
   * Message creation timestamp with format yyyy-MM-ddTHH:mm:ss
   * @return messageDateTime
  **/
  @ApiModelProperty(required = true, value = "Message creation timestamp with format yyyy-MM-ddTHH:mm:ss")
  public OffsetDateTime getMessageDateTime() {
    return messageDateTime;
  }

  public void setMessageDateTime(OffsetDateTime messageDateTime) {
    this.messageDateTime = messageDateTime;
  }

  public Message description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Information including the hash code of local host, build version and build time
   * @return description
  **/
  @ApiModelProperty(value = "Information including the hash code of local host, build version and build time")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Message service(String service) {
    this.service = service;
    return this;
  }

   /**
   * Service Name
   * @return service
  **/
  @ApiModelProperty(value = "Service Name")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }

  public Message operation(String operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Service Operation
   * @return operation
  **/
  @ApiModelProperty(value = "Service Operation")
  public String getOperation() {
    return operation;
  }

  public void setOperation(String operation) {
    this.operation = operation;
  }

  public Message errorSeverity(ErrorSeverityEnum errorSeverity) {
    this.errorSeverity = errorSeverity;
    return this;
  }

   /**
   * Error, Warning, Info
   * @return errorSeverity
  **/
  @ApiModelProperty(value = "Error, Warning, Info")
  public ErrorSeverityEnum getErrorSeverity() {
    return errorSeverity;
  }

  public void setErrorSeverity(ErrorSeverityEnum errorSeverity) {
    this.errorSeverity = errorSeverity;
  }

  public Message errorType(ErrorTypeEnum errorType) {
    this.errorType = errorType;
    return this;
  }

   /**
   * SYSTEM, BUSINESS
   * @return errorType
  **/
  @ApiModelProperty(value = "SYSTEM, BUSINESS")
  public ErrorTypeEnum getErrorType() {
    return errorType;
  }

  public void setErrorType(ErrorTypeEnum errorType) {
    this.errorType = errorType;
  }

  public Message errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Message code of the error being set by the API provider
   * @return errorCode
  **/
  @ApiModelProperty(value = "Message code of the error being set by the API provider")
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }

  public Message errorText(String errorText) {
    this.errorText = errorText;
    return this;
  }

   /**
   * Message text of the error being set by the API provider
   * @return errorText
  **/
  @ApiModelProperty(value = "Message text of the error being set by the API provider")
  public String getErrorText() {
    return errorText;
  }

  public void setErrorText(String errorText) {
    this.errorText = errorText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Message message = (Message) o;
    return Objects.equals(this.applicationId, message.applicationId) &&
        Objects.equals(this.transactionId, message.transactionId) &&
        Objects.equals(this.messageDateTime, message.messageDateTime) &&
        Objects.equals(this.description, message.description) &&
        Objects.equals(this.service, message.service) &&
        Objects.equals(this.operation, message.operation) &&
        Objects.equals(this.errorSeverity, message.errorSeverity) &&
        Objects.equals(this.errorType, message.errorType) &&
        Objects.equals(this.errorCode, message.errorCode) &&
        Objects.equals(this.errorText, message.errorText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, transactionId, messageDateTime, description, service, operation, errorSeverity, errorType, errorCode, errorText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Message {\n");
    
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    messageDateTime: ").append(toIndentedString(messageDateTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    errorSeverity: ").append(toIndentedString(errorSeverity)).append("\n");
    sb.append("    errorType: ").append(toIndentedString(errorType)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorText: ").append(toIndentedString(errorText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

