/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;

/**
 * CommunicationPreference
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class CommunicationPreference {
  @JsonProperty("preferenceIndicator")
  private Boolean preferenceIndicator = null;

  /**
   * Brand code of a vehicle
   */
  public enum BrandCodeEnum {
    TOY("TOY"),
    
    LEX("LEX");

    private String value;

    BrandCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BrandCodeEnum fromValue(String text) {
      for (BrandCodeEnum b : BrandCodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("brandCode")
  private BrandCodeEnum brandCode = null;

  @JsonProperty("preferenceTypeCode")
  private String preferenceTypeCode = null;

  @JsonProperty("effectiveDate")
  private LocalDate effectiveDate = null;

  public CommunicationPreference preferenceIndicator(Boolean preferenceIndicator) {
    this.preferenceIndicator = preferenceIndicator;
    return this;
  }

   /**
   * Indicator to note the communication preference
   * @return preferenceIndicator
  **/
  @ApiModelProperty(value = "Indicator to note the communication preference")
  public Boolean isPreferenceIndicator() {
    return preferenceIndicator;
  }

  public void setPreferenceIndicator(Boolean preferenceIndicator) {
    this.preferenceIndicator = preferenceIndicator;
  }

  public CommunicationPreference brandCode(BrandCodeEnum brandCode) {
    this.brandCode = brandCode;
    return this;
  }

   /**
   * Brand code of a vehicle
   * @return brandCode
  **/
  @ApiModelProperty(required = true, value = "Brand code of a vehicle")
  public BrandCodeEnum getBrandCode() {
    return brandCode;
  }

  public void setBrandCode(BrandCodeEnum brandCode) {
    this.brandCode = brandCode;
  }

  public CommunicationPreference preferenceTypeCode(String preferenceTypeCode) {
    this.preferenceTypeCode = preferenceTypeCode;
    return this;
  }

   /**
   * The type of communication preference
   * @return preferenceTypeCode
  **/
  @ApiModelProperty(example = "TOYOTA MARKETING NEWS", required = true, value = "The type of communication preference")
  public String getPreferenceTypeCode() {
    return preferenceTypeCode;
  }

  public void setPreferenceTypeCode(String preferenceTypeCode) {
    this.preferenceTypeCode = preferenceTypeCode;
  }

  public CommunicationPreference effectiveDate(LocalDate effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Effective date for the communication preference
   * @return effectiveDate
  **/
  @ApiModelProperty(required = true, value = "Effective date for the communication preference")
  public LocalDate getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(LocalDate effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunicationPreference communicationPreference = (CommunicationPreference) o;
    return Objects.equals(this.preferenceIndicator, communicationPreference.preferenceIndicator) &&
        Objects.equals(this.brandCode, communicationPreference.brandCode) &&
        Objects.equals(this.preferenceTypeCode, communicationPreference.preferenceTypeCode) &&
        Objects.equals(this.effectiveDate, communicationPreference.effectiveDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(preferenceIndicator, brandCode, preferenceTypeCode, effectiveDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunicationPreference {\n");
    
    sb.append("    preferenceIndicator: ").append(toIndentedString(preferenceIndicator)).append("\n");
    sb.append("    brandCode: ").append(toIndentedString(brandCode)).append("\n");
    sb.append("    preferenceTypeCode: ").append(toIndentedString(preferenceTypeCode)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

