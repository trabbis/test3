/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import ca.toyota.bizservice.api.cdms.Address;
import ca.toyota.bizservice.api.cdms.CASLStatus;
import ca.toyota.bizservice.api.cdms.CommunicationPreference;
import ca.toyota.bizservice.api.cdms.CustomerRelationship;
import ca.toyota.bizservice.api.cdms.ElectronicAddress;
import ca.toyota.bizservice.api.cdms.MarketingOptOut;
import ca.toyota.bizservice.api.cdms.Organization;
import ca.toyota.bizservice.api.cdms.Person;
import ca.toyota.bizservice.api.cdms.Phone;
import ca.toyota.bizservice.api.cdms.SuspendMail;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * A presentation for customer profile
 */
@ApiModel(description = "A presentation for customer profile")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class Customer {
  @JsonProperty("partyID")
  private Long partyID = null;

  @JsonProperty("customerNumber")
  private String customerNumber = null;

  @JsonProperty("businessPartnerNumber")
  private String businessPartnerNumber = null;

  @JsonProperty("organization")
  private Organization organization = null;

  @JsonProperty("person")
  private Person person = null;

  @JsonProperty("addresses")
  private List<Address> addresses = null;

  @JsonProperty("phones")
  private List<Phone> phones = null;

  @JsonProperty("electronicAddresses")
  private List<ElectronicAddress> electronicAddresses = null;

  /**
   * Preferred method to communicate to the party
   */
  public enum PreferredCommunicateMethodEnum {
    MAIL("MAIL"),
    
    PHONE("PHONE"),
    
    FAX("FAX"),
    
    EMAIL("EMAIL");

    private String value;

    PreferredCommunicateMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PreferredCommunicateMethodEnum fromValue(String text) {
      for (PreferredCommunicateMethodEnum b : PreferredCommunicateMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("preferredCommunicateMethod")
  private PreferredCommunicateMethodEnum preferredCommunicateMethod = null;

  @JsonProperty("preferredLanguageCode")
  private String preferredLanguageCode = null;

  @JsonProperty("associatedCampaignID")
  private String associatedCampaignID = null;

  @JsonProperty("oiccProcessSourceCode")
  private String oiccProcessSourceCode = null;

  @JsonProperty("caslStatus")
  private CASLStatus caslStatus = null;

  @JsonProperty("marketingOptOut")
  private MarketingOptOut marketingOptOut = null;

  @JsonProperty("communicationPreferences")
  private List<CommunicationPreference> communicationPreferences = null;

  @JsonProperty("suspendMail")
  private SuspendMail suspendMail = null;

  @JsonProperty("customerRelationships")
  private List<CustomerRelationship> customerRelationships = null;

  @JsonProperty("lastExistingIndicator")
  private Boolean lastExistingIndicator = null;

  @JsonProperty("lastUpdateTimestamp")
  private OffsetDateTime lastUpdateTimestamp = null;

  @JsonProperty("lastUpdateUserID")
  private String lastUpdateUserID = null;

  @JsonProperty("LastUpdateSource")
  private String lastUpdateSource = null;

  public Customer partyID(Long partyID) {
    this.partyID = partyID;
    return this;
  }

   /**
   * Customer identifier in CDMS
   * @return partyID
  **/
  @ApiModelProperty(value = "Customer identifier in CDMS")
  public Long getPartyID() {
    return partyID;
  }

  public void setPartyID(Long partyID) {
    this.partyID = partyID;
  }

  public Customer customerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
    return this;
  }

   /**
   * Unique Customer identifier in the legacy system, and referenced by PeopleSoft, which has 8 characters
   * @return customerNumber
  **/
  @ApiModelProperty(value = "Unique Customer identifier in the legacy system, and referenced by PeopleSoft, which has 8 characters")
  public String getCustomerNumber() {
    return customerNumber;
  }

  public void setCustomerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
  }

  public Customer businessPartnerNumber(String businessPartnerNumber) {
    this.businessPartnerNumber = businessPartnerNumber;
    return this;
  }

   /**
   * Business partner number defined by SAP
   * @return businessPartnerNumber
  **/
  @ApiModelProperty(value = "Business partner number defined by SAP")
  public String getBusinessPartnerNumber() {
    return businessPartnerNumber;
  }

  public void setBusinessPartnerNumber(String businessPartnerNumber) {
    this.businessPartnerNumber = businessPartnerNumber;
  }

  public Customer organization(Organization organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(value = "")
  public Organization getOrganization() {
    return organization;
  }

  public void setOrganization(Organization organization) {
    this.organization = organization;
  }

  public Customer person(Person person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @ApiModelProperty(value = "")
  public Person getPerson() {
    return person;
  }

  public void setPerson(Person person) {
    this.person = person;
  }

  public Customer addresses(List<Address> addresses) {
    this.addresses = addresses;
    return this;
  }

  public Customer addAddressesItem(Address addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * The location at which mail is delivered
   * @return addresses
  **/
  @ApiModelProperty(value = "The location at which mail is delivered")
  public List<Address> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<Address> addresses) {
    this.addresses = addresses;
  }

  public Customer phones(List<Phone> phones) {
    this.phones = phones;
    return this;
  }

  public Customer addPhonesItem(Phone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * Telephone communication including fax
   * @return phones
  **/
  @ApiModelProperty(value = "Telephone communication including fax")
  public List<Phone> getPhones() {
    return phones;
  }

  public void setPhones(List<Phone> phones) {
    this.phones = phones;
  }

  public Customer electronicAddresses(List<ElectronicAddress> electronicAddresses) {
    this.electronicAddresses = electronicAddresses;
    return this;
  }

  public Customer addElectronicAddressesItem(ElectronicAddress electronicAddressesItem) {
    if (this.electronicAddresses == null) {
      this.electronicAddresses = new ArrayList<>();
    }
    this.electronicAddresses.add(electronicAddressesItem);
    return this;
  }

   /**
   * Electronic communication such as email
   * @return electronicAddresses
  **/
  @ApiModelProperty(value = "Electronic communication such as email")
  public List<ElectronicAddress> getElectronicAddresses() {
    return electronicAddresses;
  }

  public void setElectronicAddresses(List<ElectronicAddress> electronicAddresses) {
    this.electronicAddresses = electronicAddresses;
  }

  public Customer preferredCommunicateMethod(PreferredCommunicateMethodEnum preferredCommunicateMethod) {
    this.preferredCommunicateMethod = preferredCommunicateMethod;
    return this;
  }

   /**
   * Preferred method to communicate to the party
   * @return preferredCommunicateMethod
  **/
  @ApiModelProperty(value = "Preferred method to communicate to the party")
  public PreferredCommunicateMethodEnum getPreferredCommunicateMethod() {
    return preferredCommunicateMethod;
  }

  public void setPreferredCommunicateMethod(PreferredCommunicateMethodEnum preferredCommunicateMethod) {
    this.preferredCommunicateMethod = preferredCommunicateMethod;
  }

  public Customer preferredLanguageCode(String preferredLanguageCode) {
    this.preferredLanguageCode = preferredLanguageCode;
    return this;
  }

   /**
   * ISO 639-1 language code, like: en-CA, fr-CA
   * @return preferredLanguageCode
  **/
  @ApiModelProperty(example = "en-CA", value = "ISO 639-1 language code, like: en-CA, fr-CA")
  public String getPreferredLanguageCode() {
    return preferredLanguageCode;
  }

  public void setPreferredLanguageCode(String preferredLanguageCode) {
    this.preferredLanguageCode = preferredLanguageCode;
  }

  public Customer associatedCampaignID(String associatedCampaignID) {
    this.associatedCampaignID = associatedCampaignID;
    return this;
  }

   /**
   * Get associatedCampaignID
   * @return associatedCampaignID
  **/
  @ApiModelProperty(value = "")
  public String getAssociatedCampaignID() {
    return associatedCampaignID;
  }

  public void setAssociatedCampaignID(String associatedCampaignID) {
    this.associatedCampaignID = associatedCampaignID;
  }

  public Customer oiccProcessSourceCode(String oiccProcessSourceCode) {
    this.oiccProcessSourceCode = oiccProcessSourceCode;
    return this;
  }

   /**
   * Get oiccProcessSourceCode
   * @return oiccProcessSourceCode
  **/
  @ApiModelProperty(value = "")
  public String getOiccProcessSourceCode() {
    return oiccProcessSourceCode;
  }

  public void setOiccProcessSourceCode(String oiccProcessSourceCode) {
    this.oiccProcessSourceCode = oiccProcessSourceCode;
  }

  public Customer caslStatus(CASLStatus caslStatus) {
    this.caslStatus = caslStatus;
    return this;
  }

   /**
   * Get caslStatus
   * @return caslStatus
  **/
  @ApiModelProperty(value = "")
  public CASLStatus getCaslStatus() {
    return caslStatus;
  }

  public void setCaslStatus(CASLStatus caslStatus) {
    this.caslStatus = caslStatus;
  }

  public Customer marketingOptOut(MarketingOptOut marketingOptOut) {
    this.marketingOptOut = marketingOptOut;
    return this;
  }

   /**
   * Get marketingOptOut
   * @return marketingOptOut
  **/
  @ApiModelProperty(value = "")
  public MarketingOptOut getMarketingOptOut() {
    return marketingOptOut;
  }

  public void setMarketingOptOut(MarketingOptOut marketingOptOut) {
    this.marketingOptOut = marketingOptOut;
  }

  public Customer communicationPreferences(List<CommunicationPreference> communicationPreferences) {
    this.communicationPreferences = communicationPreferences;
    return this;
  }

  public Customer addCommunicationPreferencesItem(CommunicationPreference communicationPreferencesItem) {
    if (this.communicationPreferences == null) {
      this.communicationPreferences = new ArrayList<>();
    }
    this.communicationPreferences.add(communicationPreferencesItem);
    return this;
  }

   /**
   * Get communicationPreferences
   * @return communicationPreferences
  **/
  @ApiModelProperty(value = "")
  public List<CommunicationPreference> getCommunicationPreferences() {
    return communicationPreferences;
  }

  public void setCommunicationPreferences(List<CommunicationPreference> communicationPreferences) {
    this.communicationPreferences = communicationPreferences;
  }

  public Customer suspendMail(SuspendMail suspendMail) {
    this.suspendMail = suspendMail;
    return this;
  }

   /**
   * Get suspendMail
   * @return suspendMail
  **/
  @ApiModelProperty(value = "")
  public SuspendMail getSuspendMail() {
    return suspendMail;
  }

  public void setSuspendMail(SuspendMail suspendMail) {
    this.suspendMail = suspendMail;
  }

  public Customer customerRelationships(List<CustomerRelationship> customerRelationships) {
    this.customerRelationships = customerRelationships;
    return this;
  }

  public Customer addCustomerRelationshipsItem(CustomerRelationship customerRelationshipsItem) {
    if (this.customerRelationships == null) {
      this.customerRelationships = new ArrayList<>();
    }
    this.customerRelationships.add(customerRelationshipsItem);
    return this;
  }

   /**
   * Get customerRelationships
   * @return customerRelationships
  **/
  @ApiModelProperty(value = "")
  public List<CustomerRelationship> getCustomerRelationships() {
    return customerRelationships;
  }

  public void setCustomerRelationships(List<CustomerRelationship> customerRelationships) {
    this.customerRelationships = customerRelationships;
  }

  public Customer lastExistingIndicator(Boolean lastExistingIndicator) {
    this.lastExistingIndicator = lastExistingIndicator;
    return this;
  }

   /**
   * The indication of whether the customer exists when invoking an operation. It is true if existing, otherwise false.
   * @return lastExistingIndicator
  **/
  @ApiModelProperty(value = "The indication of whether the customer exists when invoking an operation. It is true if existing, otherwise false.")
  public Boolean isLastExistingIndicator() {
    return lastExistingIndicator;
  }

  public void setLastExistingIndicator(Boolean lastExistingIndicator) {
    this.lastExistingIndicator = lastExistingIndicator;
  }

  public Customer lastUpdateTimestamp(OffsetDateTime lastUpdateTimestamp) {
    this.lastUpdateTimestamp = lastUpdateTimestamp;
    return this;
  }

   /**
   * Last date and time for updating the customer
   * @return lastUpdateTimestamp
  **/
  @ApiModelProperty(value = "Last date and time for updating the customer")
  public OffsetDateTime getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }

  public void setLastUpdateTimestamp(OffsetDateTime lastUpdateTimestamp) {
    this.lastUpdateTimestamp = lastUpdateTimestamp;
  }

  public Customer lastUpdateUserID(String lastUpdateUserID) {
    this.lastUpdateUserID = lastUpdateUserID;
    return this;
  }

   /**
   * Last userID updating the customer
   * @return lastUpdateUserID
  **/
  @ApiModelProperty(value = "Last userID updating the customer")
  public String getLastUpdateUserID() {
    return lastUpdateUserID;
  }

  public void setLastUpdateUserID(String lastUpdateUserID) {
    this.lastUpdateUserID = lastUpdateUserID;
  }

  public Customer lastUpdateSource(String lastUpdateSource) {
    this.lastUpdateSource = lastUpdateSource;
    return this;
  }

   /**
   * Last application updating the customer
   * @return lastUpdateSource
  **/
  @ApiModelProperty(value = "Last application updating the customer")
  public String getLastUpdateSource() {
    return lastUpdateSource;
  }

  public void setLastUpdateSource(String lastUpdateSource) {
    this.lastUpdateSource = lastUpdateSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.partyID, customer.partyID) &&
        Objects.equals(this.customerNumber, customer.customerNumber) &&
        Objects.equals(this.businessPartnerNumber, customer.businessPartnerNumber) &&
        Objects.equals(this.organization, customer.organization) &&
        Objects.equals(this.person, customer.person) &&
        Objects.equals(this.addresses, customer.addresses) &&
        Objects.equals(this.phones, customer.phones) &&
        Objects.equals(this.electronicAddresses, customer.electronicAddresses) &&
        Objects.equals(this.preferredCommunicateMethod, customer.preferredCommunicateMethod) &&
        Objects.equals(this.preferredLanguageCode, customer.preferredLanguageCode) &&
        Objects.equals(this.associatedCampaignID, customer.associatedCampaignID) &&
        Objects.equals(this.oiccProcessSourceCode, customer.oiccProcessSourceCode) &&
        Objects.equals(this.caslStatus, customer.caslStatus) &&
        Objects.equals(this.marketingOptOut, customer.marketingOptOut) &&
        Objects.equals(this.communicationPreferences, customer.communicationPreferences) &&
        Objects.equals(this.suspendMail, customer.suspendMail) &&
        Objects.equals(this.customerRelationships, customer.customerRelationships) &&
        Objects.equals(this.lastExistingIndicator, customer.lastExistingIndicator) &&
        Objects.equals(this.lastUpdateTimestamp, customer.lastUpdateTimestamp) &&
        Objects.equals(this.lastUpdateUserID, customer.lastUpdateUserID) &&
        Objects.equals(this.lastUpdateSource, customer.lastUpdateSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partyID, customerNumber, businessPartnerNumber, organization, person, addresses, phones, electronicAddresses, preferredCommunicateMethod, preferredLanguageCode, associatedCampaignID, oiccProcessSourceCode, caslStatus, marketingOptOut, communicationPreferences, suspendMail, customerRelationships, lastExistingIndicator, lastUpdateTimestamp, lastUpdateUserID, lastUpdateSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    
    sb.append("    partyID: ").append(toIndentedString(partyID)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    businessPartnerNumber: ").append(toIndentedString(businessPartnerNumber)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    electronicAddresses: ").append(toIndentedString(electronicAddresses)).append("\n");
    sb.append("    preferredCommunicateMethod: ").append(toIndentedString(preferredCommunicateMethod)).append("\n");
    sb.append("    preferredLanguageCode: ").append(toIndentedString(preferredLanguageCode)).append("\n");
    sb.append("    associatedCampaignID: ").append(toIndentedString(associatedCampaignID)).append("\n");
    sb.append("    oiccProcessSourceCode: ").append(toIndentedString(oiccProcessSourceCode)).append("\n");
    sb.append("    caslStatus: ").append(toIndentedString(caslStatus)).append("\n");
    sb.append("    marketingOptOut: ").append(toIndentedString(marketingOptOut)).append("\n");
    sb.append("    communicationPreferences: ").append(toIndentedString(communicationPreferences)).append("\n");
    sb.append("    suspendMail: ").append(toIndentedString(suspendMail)).append("\n");
    sb.append("    customerRelationships: ").append(toIndentedString(customerRelationships)).append("\n");
    sb.append("    lastExistingIndicator: ").append(toIndentedString(lastExistingIndicator)).append("\n");
    sb.append("    lastUpdateTimestamp: ").append(toIndentedString(lastUpdateTimestamp)).append("\n");
    sb.append("    lastUpdateUserID: ").append(toIndentedString(lastUpdateUserID)).append("\n");
    sb.append("    lastUpdateSource: ").append(toIndentedString(lastUpdateSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

