/*
 * Customer Update Integration API
 * OICC API will process OICC request and broadcast to downstream applications via broadcast API.  Briefly, OICC will call customer API to match/create/update customer profile for all involve parties,  then call SAP if required, after SAP process success broad cast CustomerProfileChangeEvent or  OwnershipChangeEvent accordingly.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.toyota.bizservice.api.cdms;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.time.OffsetDateTime;

/**
 * Address
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-11-15T15:26:37.695-05:00")
public class Address {
  @JsonProperty("locationID")
  private Long locationID = null;

  @JsonProperty("line1")
  private String line1 = null;

  @JsonProperty("line2")
  private String line2 = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("provinceCode")
  private String provinceCode = null;

  @JsonProperty("countryCode")
  private String countryCode = null;

  @JsonProperty("postalCode")
  private String postalCode = null;

  /**
   * A code specifying the type of this address such as business address or home address
   */
  public enum AddressTypeEnum {
    HOME("HOME"),
    
    BUSINESS("BUSINESS");

    private String value;

    AddressTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AddressTypeEnum fromValue(String text) {
      for (AddressTypeEnum b : AddressTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("addressType")
  private AddressTypeEnum addressType = null;

  @JsonProperty("preferredIndicator")
  private Boolean preferredIndicator = null;

  @JsonProperty("InvalidContactLocationReasonCode")
  private String invalidContactLocationReasonCode = null;

  @JsonProperty("InvalidContactLocationDate")
  private LocalDate invalidContactLocationDate = null;

  @JsonProperty("InvalidContactLocationSource")
  private String invalidContactLocationSource = null;

  @JsonProperty("ValidIndicator")
  private Boolean validIndicator = null;

  @JsonProperty("CorrectedIndicator")
  private Boolean correctedIndicator = null;

  @JsonProperty("lastUpdateTimestamp")
  private OffsetDateTime lastUpdateTimestamp = null;

  @JsonProperty("lastUpdateUserID")
  private String lastUpdateUserID = null;

  @JsonProperty("LastUpdateSource")
  private String lastUpdateSource = null;

  public Address locationID(Long locationID) {
    this.locationID = locationID;
    return this;
  }

   /**
   * A unique identifier for this address
   * @return locationID
  **/
  @ApiModelProperty(value = "A unique identifier for this address")
  public Long getLocationID() {
    return locationID;
  }

  public void setLocationID(Long locationID) {
    this.locationID = locationID;
  }

  public Address line1(String line1) {
    this.line1 = line1;
    return this;
  }

   /**
   * A free formatted text line, typically used to by an address
   * @return line1
  **/
  @ApiModelProperty(example = "1 Toyota Place", required = true, value = "A free formatted text line, typically used to by an address")
  public String getLine1() {
    return line1;
  }

  public void setLine1(String line1) {
    this.line1 = line1;
  }

  public Address line2(String line2) {
    this.line2 = line2;
    return this;
  }

   /**
   * A free formatted text line, typically used to by an address
   * @return line2
  **/
  @ApiModelProperty(value = "A free formatted text line, typically used to by an address")
  public String getLine2() {
    return line2;
  }

  public void setLine2(String line2) {
    this.line2 = line2;
  }

  public Address city(String city) {
    this.city = city;
    return this;
  }

   /**
   * A textual representation of the City of the Address
   * @return city
  **/
  @ApiModelProperty(example = "Toronto", required = true, value = "A textual representation of the City of the Address")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Address provinceCode(String provinceCode) {
    this.provinceCode = provinceCode;
    return this;
  }

   /**
   * Province code. AB, BC, MB, NB, NL, NT, NS, NU, ON, PE, QC, SK, YT and state code in U.S.A
   * @return provinceCode
  **/
  @ApiModelProperty(example = "ON", required = true, value = "Province code. AB, BC, MB, NB, NL, NT, NS, NU, ON, PE, QC, SK, YT and state code in U.S.A")
  public String getProvinceCode() {
    return provinceCode;
  }

  public void setProvinceCode(String provinceCode) {
    this.provinceCode = provinceCode;
  }

  public Address countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO 3166-1 Alpha2. CA, US
   * @return countryCode
  **/
  @ApiModelProperty(example = "CA", required = true, value = "ISO 3166-1 Alpha2. CA, US")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Address postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * A code specifying the Post Code or Zip Code for this Address
   * @return postalCode
  **/
  @ApiModelProperty(example = "M1H 1H9", value = "A code specifying the Post Code or Zip Code for this Address")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Address addressType(AddressTypeEnum addressType) {
    this.addressType = addressType;
    return this;
  }

   /**
   * A code specifying the type of this address such as business address or home address
   * @return addressType
  **/
  @ApiModelProperty(value = "A code specifying the type of this address such as business address or home address")
  public AddressTypeEnum getAddressType() {
    return addressType;
  }

  public void setAddressType(AddressTypeEnum addressType) {
    this.addressType = addressType;
  }

  public Address preferredIndicator(Boolean preferredIndicator) {
    this.preferredIndicator = preferredIndicator;
    return this;
  }

   /**
   * The indication of whether this address is preferred for mailing
   * @return preferredIndicator
  **/
  @ApiModelProperty(value = "The indication of whether this address is preferred for mailing")
  public Boolean isPreferredIndicator() {
    return preferredIndicator;
  }

  public void setPreferredIndicator(Boolean preferredIndicator) {
    this.preferredIndicator = preferredIndicator;
  }

  public Address invalidContactLocationReasonCode(String invalidContactLocationReasonCode) {
    this.invalidContactLocationReasonCode = invalidContactLocationReasonCode;
    return this;
  }

   /**
   * Reason code that makes this address not reachable
   * @return invalidContactLocationReasonCode
  **/
  @ApiModelProperty(value = "Reason code that makes this address not reachable")
  public String getInvalidContactLocationReasonCode() {
    return invalidContactLocationReasonCode;
  }

  public void setInvalidContactLocationReasonCode(String invalidContactLocationReasonCode) {
    this.invalidContactLocationReasonCode = invalidContactLocationReasonCode;
  }

  public Address invalidContactLocationDate(LocalDate invalidContactLocationDate) {
    this.invalidContactLocationDate = invalidContactLocationDate;
    return this;
  }

   /**
   * Start date of this address not reachable
   * @return invalidContactLocationDate
  **/
  @ApiModelProperty(value = "Start date of this address not reachable")
  public LocalDate getInvalidContactLocationDate() {
    return invalidContactLocationDate;
  }

  public void setInvalidContactLocationDate(LocalDate invalidContactLocationDate) {
    this.invalidContactLocationDate = invalidContactLocationDate;
  }

  public Address invalidContactLocationSource(String invalidContactLocationSource) {
    this.invalidContactLocationSource = invalidContactLocationSource;
    return this;
  }

   /**
   * Source identifying an application to make location not reachable
   * @return invalidContactLocationSource
  **/
  @ApiModelProperty(value = "Source identifying an application to make location not reachable")
  public String getInvalidContactLocationSource() {
    return invalidContactLocationSource;
  }

  public void setInvalidContactLocationSource(String invalidContactLocationSource) {
    this.invalidContactLocationSource = invalidContactLocationSource;
  }

  public Address validIndicator(Boolean validIndicator) {
    this.validIndicator = validIndicator;
    return this;
  }

   /**
   * The indication of whether this address is valid
   * @return validIndicator
  **/
  @ApiModelProperty(value = "The indication of whether this address is valid")
  public Boolean isValidIndicator() {
    return validIndicator;
  }

  public void setValidIndicator(Boolean validIndicator) {
    this.validIndicator = validIndicator;
  }

  public Address correctedIndicator(Boolean correctedIndicator) {
    this.correctedIndicator = correctedIndicator;
    return this;
  }

   /**
   * The indication of whether this address is corrected or modified
   * @return correctedIndicator
  **/
  @ApiModelProperty(value = "The indication of whether this address is corrected or modified")
  public Boolean isCorrectedIndicator() {
    return correctedIndicator;
  }

  public void setCorrectedIndicator(Boolean correctedIndicator) {
    this.correctedIndicator = correctedIndicator;
  }

  public Address lastUpdateTimestamp(OffsetDateTime lastUpdateTimestamp) {
    this.lastUpdateTimestamp = lastUpdateTimestamp;
    return this;
  }

   /**
   * Last date and time for updating the address
   * @return lastUpdateTimestamp
  **/
  @ApiModelProperty(value = "Last date and time for updating the address")
  public OffsetDateTime getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }

  public void setLastUpdateTimestamp(OffsetDateTime lastUpdateTimestamp) {
    this.lastUpdateTimestamp = lastUpdateTimestamp;
  }

  public Address lastUpdateUserID(String lastUpdateUserID) {
    this.lastUpdateUserID = lastUpdateUserID;
    return this;
  }

   /**
   * Last userID updating the address
   * @return lastUpdateUserID
  **/
  @ApiModelProperty(value = "Last userID updating the address")
  public String getLastUpdateUserID() {
    return lastUpdateUserID;
  }

  public void setLastUpdateUserID(String lastUpdateUserID) {
    this.lastUpdateUserID = lastUpdateUserID;
  }

  public Address lastUpdateSource(String lastUpdateSource) {
    this.lastUpdateSource = lastUpdateSource;
    return this;
  }

   /**
   * Last application updating the address
   * @return lastUpdateSource
  **/
  @ApiModelProperty(value = "Last application updating the address")
  public String getLastUpdateSource() {
    return lastUpdateSource;
  }

  public void setLastUpdateSource(String lastUpdateSource) {
    this.lastUpdateSource = lastUpdateSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.locationID, address.locationID) &&
        Objects.equals(this.line1, address.line1) &&
        Objects.equals(this.line2, address.line2) &&
        Objects.equals(this.city, address.city) &&
        Objects.equals(this.provinceCode, address.provinceCode) &&
        Objects.equals(this.countryCode, address.countryCode) &&
        Objects.equals(this.postalCode, address.postalCode) &&
        Objects.equals(this.addressType, address.addressType) &&
        Objects.equals(this.preferredIndicator, address.preferredIndicator) &&
        Objects.equals(this.invalidContactLocationReasonCode, address.invalidContactLocationReasonCode) &&
        Objects.equals(this.invalidContactLocationDate, address.invalidContactLocationDate) &&
        Objects.equals(this.invalidContactLocationSource, address.invalidContactLocationSource) &&
        Objects.equals(this.validIndicator, address.validIndicator) &&
        Objects.equals(this.correctedIndicator, address.correctedIndicator) &&
        Objects.equals(this.lastUpdateTimestamp, address.lastUpdateTimestamp) &&
        Objects.equals(this.lastUpdateUserID, address.lastUpdateUserID) &&
        Objects.equals(this.lastUpdateSource, address.lastUpdateSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationID, line1, line2, city, provinceCode, countryCode, postalCode, addressType, preferredIndicator, invalidContactLocationReasonCode, invalidContactLocationDate, invalidContactLocationSource, validIndicator, correctedIndicator, lastUpdateTimestamp, lastUpdateUserID, lastUpdateSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    locationID: ").append(toIndentedString(locationID)).append("\n");
    sb.append("    line1: ").append(toIndentedString(line1)).append("\n");
    sb.append("    line2: ").append(toIndentedString(line2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    provinceCode: ").append(toIndentedString(provinceCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    preferredIndicator: ").append(toIndentedString(preferredIndicator)).append("\n");
    sb.append("    invalidContactLocationReasonCode: ").append(toIndentedString(invalidContactLocationReasonCode)).append("\n");
    sb.append("    invalidContactLocationDate: ").append(toIndentedString(invalidContactLocationDate)).append("\n");
    sb.append("    invalidContactLocationSource: ").append(toIndentedString(invalidContactLocationSource)).append("\n");
    sb.append("    validIndicator: ").append(toIndentedString(validIndicator)).append("\n");
    sb.append("    correctedIndicator: ").append(toIndentedString(correctedIndicator)).append("\n");
    sb.append("    lastUpdateTimestamp: ").append(toIndentedString(lastUpdateTimestamp)).append("\n");
    sb.append("    lastUpdateUserID: ").append(toIndentedString(lastUpdateUserID)).append("\n");
    sb.append("    lastUpdateSource: ").append(toIndentedString(lastUpdateSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

